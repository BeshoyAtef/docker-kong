version: '3.9'

############################
# Shared Env for Kong
############################
x-kong-env: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-off}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: db
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
  # In DB-less mode Kong will load kong.yaml on every start:
  KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
  # Protect the Manager GUI with Kong’s basic-auth
  KONG_ADMIN_GUI_AUTH: basic-auth
  # Listen only inside the container / network
  KONG_ADMIN_LISTEN: 0.0.0.0:8001
  KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
  KONG_PROXY_LISTEN: 0.0.0.0:8000

############################
# Volumes & Networks
############################
volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  letsencrypt: {}

networks:
  kong-net:

############################
# Services
############################
services:

  ## 1) Traefik Edge Router
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=false"                             # disable Traefik dashboard
      - "--providers.docker=true"                          # read docker labels
      - "--providers.docker.exposedbydefault=false"        # only route labeled services
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.email=beshoy@ergasti.com"
      - "--certificatesResolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - letsencrypt:/letsencrypt
    networks:
      - kong-net
    restart: unless-stopped

  ## 2) Kong Database (Postgres)
  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    volumes:
      - kong_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD","pg_isready","-d", "${KONG_PG_DATABASE:-kong}","-U","${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kong-net
    restart: on-failure

  ## 3) Kong Migrations (run once)
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      <<: *kong-env
      KONG_DATABASE: postgres
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  ## 4) Kong Core
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    depends_on:
      - kong-migrations
    environment:
      <<: *kong-env
      # in DB-mode import on every start if you prefer hybrid:
      # KONG_DATABASE: postgres
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong                # your kong.yaml here
    healthcheck:
      test: ["CMD","kong","health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

    labels:
      # enable Traefik routing
      - "traefik.enable=true"

      # route HTTPS requests for https://gateway.erg.st → kong:8002
      - "traefik.http.routers.kong-manager.rule=Host(`gateway.erg.st`)"
      - "traefik.http.routers.kong-manager.entrypoints=websecure"
      - "traefik.http.routers.kong-manager.tls=true"
      - "traefik.http.routers.kong-manager.tls.certresolver=le"

      # tell Traefik which port to use on the kong container
      - "traefik.http.services.kong-manager.loadbalancer.server.port=8002"

      # (optional) if you want HTTP→HTTPS redirection:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.kong-manager.middlewares=redirect-to-https@docker"

############################
# Secrets
############################
secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
